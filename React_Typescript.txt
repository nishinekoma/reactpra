Reactについて
    概要
        ・React UIを作ることに特化したJavaScriptの（厳密には）ライブラリ
        　複雑なUI特化
        ・フレームワークと誤認する人が多い。
    特徴
        ・JavaScript内にHTMLを記述する　（JSX）を記述
        ・JavaScriptとHTMLの距離が近いためJSONなどのデータをHTMLに
        　反映することも容易
        ・データ更新するだけでリアルタイムでHTMLが更新される仕組み。
        ・仮想DOMという仕組みを「ライブラリ本体に持っている」
            仮想DOM：仮想DOMは実際のDOMではなくReactが内部的に持っ
            　　　　　ているDOMの情報(詳細は用語欄に記載。)


Library 関連
Redux Toolkit　：Reduxをより簡潔に使用できるツールキット
React-Redux　　：Reactアプリケーションで状態管理を行うためのライブラリ
                 アプリケーション全体でデータを一元管理でき、コンポーネント間でのデータのやり取りがスムーズ

用語
仮想DOM：　・UIの仮想表現をメモリー内に保持して　実際のDOMと同視させるという
　　　　　　　プログラミング概念　
　　　　　　・このコンセプトはReactによって開拓 
        　・必要な部分しか更新されてないため非常に高速に動作する
　　　　　　　　　　　　　　　　　　　　　　　　　

仮想ノード(vノード): 仮想ファイいるシステム何のオブジェクトへのアクセスを表します。
        Vノード：パス名を汎用ノード(gノード)に変換するためのみに使用される。

マウント：ランタイムのレンダラー仮想 DOM ツリー内を走査して、実際の 
　　　　　DOM ツリーを構築することができます。

パッチ（差分・リコンシリエーション）；
        仮想 DOM ツリーのコピーが 2 つある場合、レンダラーは 2 つのツリーを走査して比較し、
　　　　　その違いを把握して、その変更を実際の DOM に適用することもできます。

レジストリ：Windowsのシステムやソフトウェアの設定に関する情報が
        　記録されているファイル
モックする　機能を呼び出して模倣することを指す。

programming syntax
 <span />　の　/>は　子要素　<span>これは子要素です</span>　のやつを持たないで自己終了する。

  arrow functino アロー関数　Javaでいうラムダみたいなやつ
　デフォルト
　const add = functino(a,b) { return a + b;};
  
  アロー関数使用時
  const add = (a,b) => a + b;

オブジェクト分割代入について{}
        例code
        const myObject = {
                key1: 'value1',
                key2: 'value2',
                key3: 'value3',
                };
        取り出す
                const { key1, key3 } = myObject;

                console.log(key1); // 'value1'
                console.log(key3); // 'value3'

英語
on 何かの表面の上を示す場合に使われる
complicated（コンプリケエド）複雑化な、
~hood（フッド）※接頭辞等 状態、性質、集団
    例　child hood 子供の状態　
advanced(アェドバンシィド)形容詞：高度な
ever(エバー)常に、ずっと、いつまでも、いつも
available(アェバブォル)利用することができる。
details(データイルズ)詳細
required(リクエリィド)形容詞：必須、必須の
new 真新しいというニュアンス
recent(リーセント) 最近起こった出来事などでつかわれる新しい
latest(レィテスト)最新　late(最近の)の最上級　最も最新な情報のnuance
isolated(アイソリティッド)形容詞:隔離された、絶縁した、孤立した
peripheral(ペリフェラル)周辺的な、周囲の、周辺装置
methodology(メソドロジィイ)名詞：方法論
Each(イーチ)各自の、各、それぞれの
slightly(スライグスリィ)副詞：わずかに、若干、少し、
internally(インターナリィ)内部で、内面的に
placeholder何も入力されていない状態のテキスト入力欄に最初から薄く表示されている案内文字 ※仮に確保する会議通知当。
specify(スペシフィ)※指定する、明確に述べる、特定する　特定する
shape(シェープ)　形状　コア:物の外形
Shaping()形成する。
expects(エクスペクトッ)動詞:期待する、予期する 
composition(コンポジション)構成、組み立てる
unmet(アンメット)いまだ満たされていない
accompanying(アカンパニィング)※付随する、同行する
Inherited(インヘリテェッド)動詞：受け継ぐ、継承の意味がある。　今回は継承された
arbitrary(アァㇻビタァリィ)任意の、勝手な、　
Row(ロウ)列
empty(エンプティ)コア：中身が空の
export(エクスポート)動詞：(...へ)輸出する、(外に)伝える
anything(エ二シィング)何も
external(エクスターナル)コア：外用の　外部の、文脈ではパソコンの外で使うものHDを示すときに　外用を示す。
effective(エフェクティブ)効果的な、有効な
fetch(フェッチ)取り出す、取ってくる、参照アクセス
inbox(インボックス)到着した書類入れ。
idle(アイドル)仕事のない、暇な、根拠のない
with(ウィズ)「～を持つ」「～を使う」「～を伴って」「関連　～について」「」「」
Reducer(リディュウサー)Reduxアプリケーションで状態の変更を処理する純粋な関数です。
contained(コンテイニィッド)含まれた、抑制した、静かな、自制した、
usage(ユーシジ)名詞：使う行為。　使用法
retrieving(リトライビング)を取り戻す、回収する（している）
dispatch(ディスパッチ)発送する、派遣する　ITでは同種の複数の対象から一つを呼び出したり、データの送信を意味する。
day()曜日
date()日付
熟語
under the hood 何かがどのように機能するかの背景を示すことを意味する
                内部というイメージ
get start OK! Let's start!"よりもテンションが高い感じ Getを付ける場合、単にstartするよりも、勢いをつけて始める

wire in data 内部にデータを接続する。　簡単に言うと　データを内部に組み込むという感じ。
So far これまでのところ
would be なになにだろう。とか仮定されるときに使われたりする。
文法
To + 動詞の原形　https://www.shane.co.jp/column/detail/id=45561#:~:text=%E6%96%87%E6%B3%95%E3%81%AFto%EF%BC%8B%E5%8B%95%E8%A9%9E%E3%81%AE,%E7%B5%90%E6%9E%9C%E3%82%92%E8%A1%A8%E7%8F%BE%E3%81%A7%E3%81%8D%E3%81%BE%E3%81%99%E3%80%82
        ・ 名詞的用法「～すること」　　　　　　　　　　不定詞で始まる語句が名詞の働きをして、主語や補語、目的語の役割を果たしています。　
        ・ 形容詞的用法「～するための」
        ・副詞的用法「～するために」、「～して　　　　目的、原因や結果を表現

ReactStorybook
        what?
        ・UI component development tools.
        Major Features(主な特徴)
        ・Helps you development and design UI compornent in an isolated environment outside of your app
        ( アプリの外部の隔離された環境で UI コンポーネントを開発および設計するのに役立ちます)
        ・There are two basic levels of organization components and their child stories.
        (コンポーネントとその子ストーリーという 2 つの基本的な構成レベルがある。)

品詞
副詞：修飾する　「動詞や形容詞や副詞」　のすぐ前に置くと間違いがありません。
用語
yarn :javascriptパッケージの依存関係を行うパッケージツール

Todo
